"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .accountmappinginfo import AccountMappingInfo
from .taxratemappinginfo import TaxRateMappingInfo
from .trackingcategorymappinginfo import TrackingCategoryMappingInfo
from codatsyncexpenses import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MappingOptions:
    accounts: Optional[List[AccountMappingInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounts') }})
    r"""Array of available accounts for mapping."""
    expense_provider: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expenseProvider') }})
    r"""Name of the expense integration."""
    tax_rates: Optional[List[TaxRateMappingInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxRates') }})
    r"""Array of available tax rates for mapping."""
    tracking_categories: Optional[List[TrackingCategoryMappingInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trackingCategories') }})
    r"""Array of available tracking categories for mapping."""
    

