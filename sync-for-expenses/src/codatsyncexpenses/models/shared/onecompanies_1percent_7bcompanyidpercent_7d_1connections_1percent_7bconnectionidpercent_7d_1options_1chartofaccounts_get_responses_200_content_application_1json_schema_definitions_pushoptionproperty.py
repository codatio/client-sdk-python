"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushoptionchoice as shared_onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushoptionchoice
from ..shared import onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushoptiontype as shared_onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushoptiontype
from ..shared import onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushvalidationinfo as shared_onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushvalidationinfo
from codatsyncexpenses import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1chartOfAccountsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionProperty:
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""A description of the property."""
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName') }})
    r"""The property's display name."""
    required: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required') }})
    r"""The property is required if `True`."""
    type: shared_onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushoptiontype.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1chartOfAccountsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The option type."""
    options: Optional[list[shared_onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushoptionchoice.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1chartOfAccountsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionChoice]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    properties: Optional[dict[str, Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1chartOfAccountsGetResponses200ContentApplication1jsonSchemaDefinitionsPushOptionProperty]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties') }})
    validation: Optional[shared_onecompanies_1percent_7bcompanyidpercent_7d_1connections_1percent_7bconnectionidpercent_7d_1options_1chartofaccounts_get_responses_200_content_application_1json_schema_definitions_pushvalidationinfo.Onecompanies1Percent7BcompanyIDPercent7D1connections1Percent7BconnectionIDPercent7D1options1chartOfAccountsGetResponses200ContentApplication1jsonSchemaDefinitionsPushValidationInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validation'), 'exclude': lambda f: f is None }})
    

