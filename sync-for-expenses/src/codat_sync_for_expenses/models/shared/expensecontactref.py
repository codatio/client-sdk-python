"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_sync_for_expenses.types import BaseModel
from enum import Enum
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class Type(str, Enum):
    r"""The type of contact."""

    SUPPLIER = "Supplier"


class ExpenseContactRefTypedDict(TypedDict):
    id: str
    r"""Identifier of supplier or customer."""
    type: NotRequired[Type]
    r"""The type of contact."""


class ExpenseContactRef(BaseModel):
    id: str
    r"""Identifier of supplier or customer."""

    type: Optional[Type] = Type.SUPPLIER
    r"""The type of contact."""
