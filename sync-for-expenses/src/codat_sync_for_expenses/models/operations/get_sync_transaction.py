"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_sync_for_expenses.types import BaseModel
from codat_sync_for_expenses.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing_extensions import Annotated, TypedDict


class GetSyncTransactionRequestTypedDict(TypedDict):
    company_id: str
    r"""Unique identifier for a company."""
    sync_id: str
    r"""Unique identifier for a sync."""
    transaction_id: str
    r"""The unique identifier for your SMB's transaction."""


class GetSyncTransactionRequest(BaseModel):
    company_id: Annotated[
        str,
        pydantic.Field(alias="companyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a company."""

    sync_id: Annotated[
        str,
        pydantic.Field(alias="syncId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a sync."""

    transaction_id: Annotated[
        str,
        pydantic.Field(alias="transactionId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The unique identifier for your SMB's transaction."""
