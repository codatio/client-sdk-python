"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_sync_for_expenses.models.shared import (
    transfertransactionrequest as shared_transfertransactionrequest,
)
from codat_sync_for_expenses.types import BaseModel
from codat_sync_for_expenses.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateTransferTransactionRequestTypedDict(TypedDict):
    company_id: str
    r"""Unique identifier for a company."""
    transaction_id: str
    r"""The unique identifier for your SMB's transaction."""
    transfer_transaction_request: NotRequired[
        shared_transfertransactionrequest.TransferTransactionRequestTypedDict
    ]


class CreateTransferTransactionRequest(BaseModel):
    company_id: Annotated[
        str,
        pydantic.Field(alias="companyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a company."""

    transaction_id: Annotated[
        str,
        pydantic.Field(alias="transactionId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The unique identifier for your SMB's transaction."""

    transfer_transaction_request: Annotated[
        Optional[shared_transfertransactionrequest.TransferTransactionRequest],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
