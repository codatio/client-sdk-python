"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from codat import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional

class FinancialMetricErrorTypeEnum(str, Enum):
    DATA_NOT_SYNCED = 'DataNotSynced'
    DATA_NOT_SUPPORTED = 'DataNotSupported'
    DATA_SYNC_FAILED = 'DataSyncFailed'
    DATA_TYPE_NOT_ENABLED = 'DataTypeNotEnabled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FinancialMetricError:
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    type: Optional[FinancialMetricErrorTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    