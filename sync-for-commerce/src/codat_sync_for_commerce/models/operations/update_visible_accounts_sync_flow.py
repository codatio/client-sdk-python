"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_sync_for_commerce.models.shared import (
    visibleaccounts as shared_visibleaccounts,
)
from codat_sync_for_commerce.types import BaseModel
from codat_sync_for_commerce.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UpdateVisibleAccountsSyncFlowRequestTypedDict(TypedDict):
    platform_key: str
    r"""A unique 4-letter key to represent a platform in each integration."""
    visible_accounts: NotRequired[shared_visibleaccounts.VisibleAccountsTypedDict]


class UpdateVisibleAccountsSyncFlowRequest(BaseModel):
    platform_key: Annotated[
        str,
        pydantic.Field(alias="platformKey"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""A unique 4-letter key to represent a platform in each integration."""

    visible_accounts: Annotated[
        Optional[shared_visibleaccounts.VisibleAccounts],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
