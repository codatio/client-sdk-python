"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .datatype import DataType
from .status import Status
from codat_platform.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DataTypeReadSummaryTypedDict(TypedDict):
    connection_id: NotRequired[str]
    r"""Unique identifier for a company's data connection."""
    data_type: NotRequired[DataType]
    r"""Available data types"""
    records_modified: NotRequired[bool]
    r"""`True` if records have been created, updated or deleted in Codat's cache."""
    status: NotRequired[Status]
    r"""The current status of the dataset."""


class DataTypeReadSummary(BaseModel):
    connection_id: Annotated[Optional[str], pydantic.Field(alias="connectionId")] = None
    r"""Unique identifier for a company's data connection."""

    data_type: Annotated[Optional[DataType], pydantic.Field(alias="dataType")] = None
    r"""Available data types"""

    records_modified: Annotated[
        Optional[bool], pydantic.Field(alias="recordsModified")
    ] = None
    r"""`True` if records have been created, updated or deleted in Codat's cache."""

    status: Optional[Status] = None
    r"""The current status of the dataset."""
