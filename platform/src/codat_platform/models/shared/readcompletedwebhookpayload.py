"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .companyreference import CompanyReference, CompanyReferenceTypedDict
from .datatype import DataType
from .status import Status
from codat_platform.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DataTypesTypedDict(TypedDict):
    connection_id: NotRequired[str]
    r"""Unique identifier for a company's data connection."""
    data_type: NotRequired[DataType]
    r"""Available data types"""
    records_modified: NotRequired[bool]
    r"""`True` if records have been created, updated or deleted in Codat's cache."""
    status: NotRequired[Status]
    r"""The current status of the dataset."""


class DataTypes(BaseModel):
    connection_id: Annotated[Optional[str], pydantic.Field(alias="connectionId")] = None
    r"""Unique identifier for a company's data connection."""

    data_type: Annotated[Optional[DataType], pydantic.Field(alias="dataType")] = None
    r"""Available data types"""

    records_modified: Annotated[
        Optional[bool], pydantic.Field(alias="recordsModified")
    ] = None
    r"""`True` if records have been created, updated or deleted in Codat's cache."""

    status: Optional[Status] = None
    r"""The current status of the dataset."""


class ReadCompletedWebhookPayloadTypedDict(TypedDict):
    data_types: NotRequired[List[DataTypesTypedDict]]
    modified_from_date: NotRequired[str]
    r"""In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:

    ```
    2020-10-08T22:40:50Z
    2021-01-01T00:00:00
    ```



    When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:

    - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
    - Unqualified local time: `2021-11-15T01:00:00`
    - UTC time offsets: `2021-11-15T01:00:00-05:00`

    > Time zones
    >
    > Not all dates from Codat will contain information about time zones.
    > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
    """
    reference_company: NotRequired[CompanyReferenceTypedDict]


class ReadCompletedWebhookPayload(BaseModel):
    data_types: Annotated[
        Optional[List[DataTypes]], pydantic.Field(alias="dataTypes")
    ] = None

    modified_from_date: Annotated[
        Optional[str], pydantic.Field(alias="modifiedFromDate")
    ] = None
    r"""In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:

    ```
    2020-10-08T22:40:50Z
    2021-01-01T00:00:00
    ```



    When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:

    - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
    - Unqualified local time: `2021-11-15T01:00:00`
    - UTC time offsets: `2021-11-15T01:00:00-05:00`

    > Time zones
    >
    > Not all dates from Codat will contain information about time zones.
    > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
    """

    reference_company: Annotated[
        Optional[CompanyReference], pydantic.Field(alias="referenceCompany")
    ] = None
