"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from codatplatform import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebhookConsumer:
    r"""A webhook consumer is an HTTP endpoint that developers can configure to subscribe to Codat's supported event types.

    See our documentation for more details on [Codat's webhook service](https://docs.codat.io/using-the-api/webhooks/overview).
    """
    UNSET='__SPEAKEASY_UNSET__'
    disabled: Optional[bool] = dataclasses.field(default=False, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disabled'), 'exclude': lambda f: f is WebhookConsumer.UNSET }})
    r"""Flag that enables or disables the endpoint from receiving events. Disabled when set to `true`."""
    event_types: Optional[List[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTypes'), 'exclude': lambda f: f is None }})
    r"""An array of event types the webhook consumer subscribes to."""
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the webhook consumer."""
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The URL that will consume webhook events dispatched by Codat."""
    

