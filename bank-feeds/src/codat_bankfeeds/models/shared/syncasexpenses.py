"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .bankaccountoption import BankAccountOption, BankAccountOptionTypedDict
from .configurationcustomer import ConfigurationCustomer, ConfigurationCustomerTypedDict
from .configurationsupplier import ConfigurationSupplier, ConfigurationSupplierTypedDict
from codat_bankfeeds.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SyncAsExpensesTypedDict(TypedDict):
    bank_account_options: NotRequired[List[BankAccountOptionTypedDict]]
    customer: NotRequired[ConfigurationCustomerTypedDict]
    enable_sync: NotRequired[bool]
    r"""True if expense sync is enabled."""
    selected_bank_account_id: NotRequired[str]
    r"""The bank account ID being synced."""
    supplier: NotRequired[ConfigurationSupplierTypedDict]


class SyncAsExpenses(BaseModel):
    bank_account_options: Annotated[
        Optional[List[BankAccountOption]], pydantic.Field(alias="bankAccountOptions")
    ] = None

    customer: Optional[ConfigurationCustomer] = None

    enable_sync: Annotated[Optional[bool], pydantic.Field(alias="enableSync")] = None
    r"""True if expense sync is enabled."""

    selected_bank_account_id: Annotated[
        Optional[str], pydantic.Field(alias="selectedBankAccountId")
    ] = None
    r"""The bank account ID being synced."""

    supplier: Optional[ConfigurationSupplier] = None
