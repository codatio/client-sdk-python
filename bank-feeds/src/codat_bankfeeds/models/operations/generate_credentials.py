"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_bankfeeds.types import BaseModel
from codat_bankfeeds.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import io
import pydantic
from typing import IO, TypedDict, Union
from typing_extensions import Annotated


class GenerateCredentialsRequestTypedDict(TypedDict):
    request_body: Union[bytes, IO[bytes], io.BufferedReader]
    company_id: str
    r"""Unique identifier for a company."""
    connection_id: str
    r"""Unique identifier for a connection."""


class GenerateCredentialsRequest(BaseModel):
    request_body: Annotated[
        Union[bytes, IO[bytes], io.BufferedReader],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    company_id: Annotated[
        str,
        pydantic.Field(alias="companyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a company."""

    connection_id: Annotated[
        str,
        pydantic.Field(alias="connectionId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a connection."""
