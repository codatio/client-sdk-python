"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .updateconnectionstatus import (
    UpdateConnectionStatus,
    UpdateConnectionStatusTypedDict,
)
from codat_common.types import BaseModel
from codat_common.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UnlinkConnectionRequestTypedDict(TypedDict):
    company_id: str
    r"""Unique identifier for a company."""
    connection_id: str
    r"""Unique identifier for a connection."""
    update_connection_status: NotRequired[UpdateConnectionStatusTypedDict]


class UnlinkConnectionRequest(BaseModel):
    company_id: Annotated[
        str,
        pydantic.Field(alias="companyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a company."""

    connection_id: Annotated[
        str,
        pydantic.Field(alias="connectionId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a connection."""

    update_connection_status: Annotated[
        Optional[UpdateConnectionStatus],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
