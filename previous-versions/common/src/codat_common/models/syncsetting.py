"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .datatype import DataType
from codat_common.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class SyncSettingTypedDict(TypedDict):
    r"""Describes how often, and how much history, should be fetched for the given data type when a pull operation is queued."""

    data_type: DataType
    r"""Available data types"""
    fetch_on_first_link: bool
    r"""Whether this data type should be queued after a company has authorized a connection."""
    sync_order: int
    r"""The sync in which data types are queued for a sync."""
    sync_schedule: int
    r"""Number of hours after which this data type should be refreshed."""
    is_locked: NotRequired[bool]
    r"""`True` if the [sync setting](https://docs.codat.io/knowledge-base/advanced-sync-settings) is locked."""
    months_to_sync: NotRequired[int]
    r"""Months of data to fetch, for report data types (`balanceSheet` & `profitAndLoss`) only."""
    sync_from_utc: NotRequired[str]
    r"""In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:

    ```
    2020-10-08T22:40:50Z
    2021-01-01T00:00:00
    ```



    When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:

    - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
    - Unqualified local time: `2021-11-15T01:00:00`
    - UTC time offsets: `2021-11-15T01:00:00-05:00`

    > Time zones
    >
    > Not all dates from Codat will contain information about time zones.
    > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
    """
    sync_from_window: NotRequired[int]
    r"""Number of months of data to be fetched. Set this *or* `syncFromUTC`."""


class SyncSetting(BaseModel):
    r"""Describes how often, and how much history, should be fetched for the given data type when a pull operation is queued."""

    data_type: Annotated[DataType, pydantic.Field(alias="dataType")]
    r"""Available data types"""

    fetch_on_first_link: Annotated[bool, pydantic.Field(alias="fetchOnFirstLink")]
    r"""Whether this data type should be queued after a company has authorized a connection."""

    sync_order: Annotated[int, pydantic.Field(alias="syncOrder")]
    r"""The sync in which data types are queued for a sync."""

    sync_schedule: Annotated[int, pydantic.Field(alias="syncSchedule")]
    r"""Number of hours after which this data type should be refreshed."""

    is_locked: Annotated[Optional[bool], pydantic.Field(alias="isLocked")] = None
    r"""`True` if the [sync setting](https://docs.codat.io/knowledge-base/advanced-sync-settings) is locked."""

    months_to_sync: Annotated[Optional[int], pydantic.Field(alias="monthsToSync")] = (
        None
    )
    r"""Months of data to fetch, for report data types (`balanceSheet` & `profitAndLoss`) only."""

    sync_from_utc: Annotated[Optional[str], pydantic.Field(alias="syncFromUtc")] = None
    r"""In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:

    ```
    2020-10-08T22:40:50Z
    2021-01-01T00:00:00
    ```



    When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:

    - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
    - Unqualified local time: `2021-11-15T01:00:00`
    - UTC time offsets: `2021-11-15T01:00:00-05:00`

    > Time zones
    >
    > Not all dates from Codat will contain information about time zones.
    > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
    """

    sync_from_window: Annotated[
        Optional[int], pydantic.Field(alias="syncFromWindow")
    ] = None
    r"""Number of months of data to be fetched. Set this *or* `syncFromUTC`."""
