"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .webhooknotifier import WebhookNotifier, WebhookNotifierTypedDict
from codat_common.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class WebhookTypedDict(TypedDict):
    r"""Configuration to provide an event notification to a URL or list of email addresses based on the given type or condition."""

    notifiers: WebhookNotifierTypedDict
    type: str
    r"""The type of webhook."""
    company_id: NotRequired[str]
    r"""Unique identifier for your SMB in Codat."""
    id: NotRequired[str]
    r"""Unique identifier for the configured notification."""


class Webhook(BaseModel):
    r"""Configuration to provide an event notification to a URL or list of email addresses based on the given type or condition."""

    notifiers: WebhookNotifier

    type: str
    r"""The type of webhook."""

    company_id: Annotated[Optional[str], pydantic.Field(alias="companyId")] = None
    r"""Unique identifier for your SMB in Codat."""

    id: Optional[str] = None
    r"""Unique identifier for the configured notification."""
