"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .customdatatypeconfiguration import (
    CustomDataTypeConfiguration,
    CustomDataTypeConfigurationTypedDict,
)
from codat_common.types import BaseModel
from codat_common.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ConfigureCustomDataTypeRequestTypedDict(TypedDict):
    custom_data_identifier: str
    r"""Unique identifier for a custom data type."""
    platform_key: str
    r"""A unique 4-letter key to represent a platform in each integration."""
    custom_data_type_configuration: NotRequired[CustomDataTypeConfigurationTypedDict]
    r"""Custom data type configuration for the specified platform."""


class ConfigureCustomDataTypeRequest(BaseModel):
    custom_data_identifier: Annotated[
        str,
        pydantic.Field(alias="customDataIdentifier"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a custom data type."""

    platform_key: Annotated[
        str,
        pydantic.Field(alias="platformKey"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""A unique 4-letter key to represent a platform in each integration."""

    custom_data_type_configuration: Annotated[
        Optional[CustomDataTypeConfiguration],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
    r"""Custom data type configuration for the specified platform."""
