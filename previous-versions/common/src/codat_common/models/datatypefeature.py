"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .datatype import DataType
from .supportedfeature import SupportedFeature, SupportedFeatureTypedDict
from codat_common.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class DataTypeFeatureTypedDict(TypedDict):
    r"""Describes support for a given datatype and associated operations"""

    supported_features: List[SupportedFeatureTypedDict]
    data_type: NotRequired[DataType]
    r"""Available data types"""


class DataTypeFeature(BaseModel):
    r"""Describes support for a given datatype and associated operations"""

    supported_features: Annotated[
        List[SupportedFeature], pydantic.Field(alias="supportedFeatures")
    ]

    data_type: Annotated[Optional[DataType], pydantic.Field(alias="dataType")] = None
    r"""Available data types"""
