"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_assess.types import BaseModel
from codat_assess.utils import serialize_decimal, validate_decimal
from decimal import Decimal
import pydantic
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class AccountCategoryLevelTypedDict(TypedDict):
    r"""An object containing an ordered list of account category levels."""

    confidence: NotRequired[Decimal]
    r"""Confidence level of the category. This will only be populated where `status` is `Suggested`."""
    level_name: NotRequired[str]
    r"""Account category name."""


class AccountCategoryLevel(BaseModel):
    r"""An object containing an ordered list of account category levels."""

    confidence: Annotated[
        Optional[Decimal],
        BeforeValidator(validate_decimal),
        PlainSerializer(serialize_decimal(False)),
    ] = None
    r"""Confidence level of the category. This will only be populated where `status` is `Suggested`."""

    level_name: Annotated[Optional[str], pydantic.Field(alias="levelName")] = None
    r"""Account category name."""
