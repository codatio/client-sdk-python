"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_assess.models.shared import excelreporttype as shared_excelreporttype
from codat_assess.types import BaseModel
from codat_assess.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import TypedDict
from typing_extensions import Annotated


class GetExcelReportRequestTypedDict(TypedDict):
    company_id: str
    r"""Unique identifier for a company."""
    report_type: shared_excelreporttype.ExcelReportType
    r"""The type of report you want to generate and download."""


class GetExcelReportRequest(BaseModel):
    company_id: Annotated[
        str,
        pydantic.Field(alias="companyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a company."""

    report_type: Annotated[
        shared_excelreporttype.ExcelReportType,
        pydantic.Field(alias="reportType"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""The type of report you want to generate and download."""


class GetExcelReportResponseBodyTypedDict(TypedDict):
    r"""OK"""


class GetExcelReportResponseBody(BaseModel):
    r"""OK"""
