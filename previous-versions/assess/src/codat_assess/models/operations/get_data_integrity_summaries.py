"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_assess.models.shared import (
    dataintegritydatatype as shared_dataintegritydatatype,
)
from codat_assess.types import BaseModel
from codat_assess.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetDataIntegritySummariesRequestTypedDict(TypedDict):
    company_id: str
    r"""Unique identifier for a company."""
    data_type: shared_dataintegritydatatype.DataIntegrityDataType
    r"""A key for a Codat data type."""
    query: NotRequired[str]
    r"""Codat query string. [Read more](https://docs.codat.io/using-the-api/querying)."""


class GetDataIntegritySummariesRequest(BaseModel):
    company_id: Annotated[
        str,
        pydantic.Field(alias="companyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique identifier for a company."""

    data_type: Annotated[
        shared_dataintegritydatatype.DataIntegrityDataType,
        pydantic.Field(alias="dataType"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""A key for a Codat data type."""

    query: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Codat query string. [Read more](https://docs.codat.io/using-the-api/querying)."""
