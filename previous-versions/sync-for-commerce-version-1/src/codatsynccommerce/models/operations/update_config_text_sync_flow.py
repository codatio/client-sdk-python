"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import locale as shared_locale
from ...models.shared import localization as shared_localization
from typing import Dict, Optional


@dataclasses.dataclass
class UpdateConfigTextSyncFlowRequest:
    locale: shared_locale.Locale = dataclasses.field(metadata={'query_param': { 'field_name': 'locale', 'style': 'form', 'explode': True }})
    r"""Localization identifier for English (US) or French."""
    request_body: Optional[Dict[str, shared_localization.Localization]] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    



@dataclasses.dataclass
class UpdateConfigTextSyncFlowResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    localization_info: Optional[Dict[str, shared_localization.Localization]] = dataclasses.field(default=None)
    r"""Success"""
    

