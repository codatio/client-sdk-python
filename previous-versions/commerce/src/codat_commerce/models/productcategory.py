"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .recordref import RecordRef, RecordRefTypedDict
from codat_commerce.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ProductCategoryTypedDict(TypedDict):
    r"""Product categories are used to classify a group of products together, either by type (e.g. \"Furniture\"), or sometimes by tax profile.

    Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=commerce-productCategories) for this data type.
    """

    ancestor_refs: NotRequired[List[RecordRefTypedDict]]
    r"""A collection of parent product categories implicitly ordered with the immediate parent last in the list."""
    has_children: NotRequired[bool]
    r"""A boolean indicating whether there are other product categories beneath this one in the hierarchy."""
    id: NotRequired[str]
    r"""The unique identifier of the product category"""
    modified_date: NotRequired[str]
    name: NotRequired[str]
    r"""The name of the product category"""
    source_modified_date: NotRequired[str]


class ProductCategory(BaseModel):
    r"""Product categories are used to classify a group of products together, either by type (e.g. \"Furniture\"), or sometimes by tax profile.

    Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=commerce-productCategories) for this data type.
    """

    ancestor_refs: Annotated[
        Optional[List[RecordRef]], pydantic.Field(alias="ancestorRefs")
    ] = None
    r"""A collection of parent product categories implicitly ordered with the immediate parent last in the list."""

    has_children: Annotated[Optional[bool], pydantic.Field(alias="hasChildren")] = None
    r"""A boolean indicating whether there are other product categories beneath this one in the hierarchy."""

    id: Optional[str] = None
    r"""The unique identifier of the product category"""

    modified_date: Annotated[Optional[str], pydantic.Field(alias="modifiedDate")] = None

    name: Optional[str] = None
    r"""The name of the product category"""

    source_modified_date: Annotated[
        Optional[str], pydantic.Field(alias="sourceModifiedDate")
    ] = None
