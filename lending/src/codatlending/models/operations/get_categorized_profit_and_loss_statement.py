"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import enhancedfinancialreport as shared_enhancedfinancialreport
from typing import Optional


@dataclasses.dataclass
class GetCategorizedProfitAndLossStatementRequest:
    company_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'companyId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier for a company."""
    number_of_periods: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'numberOfPeriods', 'style': 'form', 'explode': True }})
    r"""The number of periods to return. If not provided, 12 periods will be used as the default value."""
    report_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'reportDate', 'style': 'form', 'explode': True }})
    r"""The date in which the report is created up to. Users must specify a specific date, however the response will be provided for the full month."""
    



@dataclasses.dataclass
class GetCategorizedProfitAndLossStatementResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    enhanced_financial_report: Optional[shared_enhancedfinancialreport.EnhancedFinancialReport] = dataclasses.field(default=None)
    r"""OK"""
    

