"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from codat_lending.models.shared import fileupload as shared_fileupload
from codat_lending.types import BaseModel
from codat_lending.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UploadFilesRequestTypedDict(TypedDict):
    company_id: str
    r"""Unique identifier for a company."""
    connection_id: str
    r"""Unique identifier for a connection."""
    file_upload: NotRequired[shared_fileupload.FileUploadTypedDict]
    

class UploadFilesRequest(BaseModel):
    company_id: Annotated[str, pydantic.Field(alias="companyId"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Unique identifier for a company."""
    connection_id: Annotated[str, pydantic.Field(alias="connectionId"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""Unique identifier for a connection."""
    file_upload: Annotated[Optional[shared_fileupload.FileUpload], FieldMetadata(request=RequestMetadata(media_type="multipart/form-data"))] = None
    
