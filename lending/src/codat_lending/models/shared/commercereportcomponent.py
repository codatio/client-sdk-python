"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .reportcomponentmeasure import (
    ReportComponentMeasure,
    ReportComponentMeasureTypedDict,
)
from codat_lending.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CommerceReportComponentTypedDict(TypedDict):
    components: NotRequired[List[CommerceReportComponentTypedDict]]
    dimension: NotRequired[int]
    r"""The component's dimension."""
    dimension_display_name: NotRequired[str]
    r"""The component's display name."""
    item: NotRequired[int]
    r"""The component's item number."""
    item_display_name: NotRequired[str]
    r"""The component's item display name."""
    measures: NotRequired[List[ReportComponentMeasureTypedDict]]


class CommerceReportComponent(BaseModel):
    components: Optional[List[CommerceReportComponent]] = None

    dimension: Optional[int] = None
    r"""The component's dimension."""

    dimension_display_name: Annotated[
        Optional[str], pydantic.Field(alias="dimensionDisplayName")
    ] = None
    r"""The component's display name."""

    item: Optional[int] = None
    r"""The component's item number."""

    item_display_name: Annotated[
        Optional[str], pydantic.Field(alias="itemDisplayName")
    ] = None
    r"""The component's item display name."""

    measures: Optional[List[ReportComponentMeasure]] = None
