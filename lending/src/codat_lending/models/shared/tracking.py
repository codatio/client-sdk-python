"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .accountingrecordref import AccountingRecordRef, AccountingRecordRefTypedDict
from .trackingrecordref import TrackingRecordRef, TrackingRecordRefTypedDict
from codat_lending.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TrackingTypedDict(TypedDict):
    record_refs: List[TrackingRecordRefTypedDict]
    invoice_to: NotRequired[AccountingRecordRefTypedDict]
    r"""Links the current record to the underlying record or data type that created it.

    For example, if a journal entry is generated based on an invoice, this property allows you to connect the journal entry to the underlying invoice in our data model.
    """


class Tracking(BaseModel):
    record_refs: Annotated[List[TrackingRecordRef], pydantic.Field(alias="recordRefs")]

    invoice_to: Annotated[
        Optional[AccountingRecordRef], pydantic.Field(alias="invoiceTo")
    ] = None
    r"""Links the current record to the underlying record or data type that created it.

    For example, if a journal entry is generated based on an invoice, this property allows you to connect the journal entry to the underlying invoice in our data model.
    """
